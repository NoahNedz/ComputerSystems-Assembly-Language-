;*****************************************************************
;* This stationery serves as the framework for a                 *
;* user application (single file, absolute assembly application) *
;* For a more comprehensive program that                         *
;* demonstrates the more advanced functionality of this          *
;* processor, please see the demonstration applications          *
;* located in the examples subdirectory of the                   *
;* Freescale CodeWarrior for the HC12 Program directory          *
;*****************************************************************

; export symbols
            XDEF Entry, _Startup            ; export 'Entry' symbol
            ABSENTRY Entry        ; for absolute assembly: mark this as application entry point



; Include derivative-specific definitions 
;		INCLUDE 'derivative.inc' 

RAMStart    EQU  $0800
ROMStart    EQU  $4000  ; absolute address to place my code/constant data

; variable/data section

            ORG RAMStart

; code section
            

samples      DC.B $08,$00,$30,$A0,$B0,$C0
tsum         DS.B 1
   


; code section
            ORG   ROMStart

Entry:
_Startup:            
            
           ldaa $0800 ;a = 10
           adda $0801 ;a + 801 = 30
           ldaa #0    ; clears a
           
           ldx #samples; x =800
           ldaa 0,x   ; a = 10
           adda 1,+x  ; a = 800 + 801=30  (x=801)
           ldab #$1    ; b = 1
           adda b,x   ; x + b = 802, a = 30 + 30 = 60
           
           adda 2,+x  ; x = $803, $60 + $A0 = $100   
           adda 1,+x  ; x = $804, a = $100 + $B0 = $1B0
           adda 1,+x  ; x = $805, a = 1B0 + C0 = $270
           
           staa tsum  ; stores content of a into tsum
           
           
           ldx #$0800
           ldaa $0800
           ldab $0801
           ldx [0,x]   ;contents in 800 and 801  
           
           ldd  #0
           ldx  #0
           ldy  #0
           
           ldx #$0800
           ldaa #$FF
           cmpa #$00
           bhi larger
           ldaa #$43
           
larger:    ldaa #$69
           bra done
           ldaa #$43
           
done:      ldab #$01
           ldaa #$00
           exg  a,b
           inca
           movb $800,$801
           
           
            
           
           
           
           
           
           
           
            
           RTS                   ; result in D

;**************************************************************
;*                 Interrupt Vectors                          *
;**************************************************************
            ORG   $FFFE
            DC.W  Entry           ; Reset Vector
